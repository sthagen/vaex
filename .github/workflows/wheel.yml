name: Build binary wheel

on:
  push:
    tags:
      - core-*

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macOS-latest]
        python-version: [36, 37, 38]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.3.0

    - name: Install twine/wheel
      run: |
        python -m pip install twine wheel

    - name: Install Visual C++ for Python 2.7
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install vcpython27 -f -y

    - name: chores
      run: |
        mkdir dist
        mkdir packages/vaex-core/bin
        cp bin/install_pcre.sh packages/vaex-core/bin/

    - name: Build vaex-core
      env:
        CIBW_BEFORE_BUILD: bin/install_pcre.sh
        CIBW_BUILD: cp${{ matrix.python-version }}*64
        CIBW_ENVIRONMENT_LINUX: "CFLAGS='-Wl,-strip-all' CXXFLAGS='-Wl,-strip-all'"
      if: startsWith(github.ref, 'refs/tags/core')
      run: |
        python -m cibuildwheel --output-dir dist packages/vaex-core
        (cd packages/vaex-core && python setup.py sdist); cp packages/vaex-core/dist/* dist/

    - uses: actions/upload-artifact@v1
      with:
        name: distributions
        path: ./dist

    - name: Publish a Python distribution to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_core }}
      run: |
        twine upload --skip-existing dist/vaex-core* dist/vaex_core*
